# Base image with system dependencies
FROM python:3.11-slim AS base
ENV PYTHONUNBUFFERED=1
RUN apt-get update && apt-get install -y --no-install-recommends \
        pkg-config libfontconfig1-dev build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Python requirements into an intermediate location
FROM base AS builder
WORKDIR /app
COPY requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --prefix=/install -r requirements.txt
# Make the installed packages available to Python
ENV PYTHONPATH=/install/lib/python3.11/site-packages
# Add the installation prefix to PATH so the Playwright CLI is available
ENV PATH="/install/bin:$PATH"
RUN playwright install --with-deps

# Rust toolchain for runtime compilation
FROM rust:slim AS rust
RUN apt-get update && apt-get install -y --no-install-recommends \
        pkg-config libfontconfig1-dev \
    && rm -rf /var/lib/apt/lists/*

# Final runtime image
FROM python:3.11-slim AS runtime
ENV PYTHONUNBUFFERED=1
RUN apt-get update && apt-get install -y --no-install-recommends \
        pkg-config libfontconfig1-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Python dependencies and Rust toolchain
COPY --from=builder /install /usr/local
COPY --from=rust /usr/local /usr/local
ENV PATH="/usr/local/bin:$PATH"

WORKDIR /app
COPY app ./app

ARG OPENROUTER_API_KEY
ARG OPENROUTER_MODEL
ENV OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
ENV OPENROUTER_MODEL=${OPENROUTER_MODEL}

EXPOSE 8000
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
